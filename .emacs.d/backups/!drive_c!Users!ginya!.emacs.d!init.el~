;; 文字コード
(set-language-environment "Japanese")
(prefer-coding-system 'utf-8)
(when (eq system-type 'darwin)
  (require 'ucs-normalize)
  (set-file-name-coding-system 'utf-8-hfs)
  (setq local-coding-system 'utf-8-hfs))
(when (eq system-type 'w32)
  (set-file-name-coding-system 'cp932)
  (setq local-coding-system 'cp932))
(setq-default tab-width 4)

;; ~/.emacs.d/elispディレクトリをロードパスに追加する
;; ただし、add-to-load-path関数を作成した場合は不要
;(add-to-list 'load-path "~/.emacs.d/elisp")

;; Emacs23以前はuser-emacs-directory変数が未定のため追加
(when (> emacs-major-version 23)
  (defvar user-emacs-directory "~/.emacs.d"))

;; load-pathを追加する関数を定義
(defun add-to-load-path (&rest paths)
  (let (path)
    (dolist (path paths paths)
      (let ((default-directory
	      (expand-file-name (concat user-emacs-directory path))))
	(add-to-list 'load-path default-directory)
	(if (fboundp 'normal-top-level-add-subdirs-to-load-path)
	    (normal-top-level-add-subdirs-to-load-path))))))

;; 引数のディレクトリとサブディレクトリをload-pathに追加
(add-to-load-path "elisp" "conf" "public_repos")

;; フレーム設定
;; メニューバー非表示
(menu-bar-mode 0)
;; ターミナル以外はツールバー・スクロールバーを非表示
(when window-system
  (tool-bar-mode 0)
  (scroll-bar-mode 0))
;; 行番号・カラム番号表示
(column-number-mode t)
;; ファイルサイズ表示
(size-indication-mode t)
;; 時計表示
;; (setq display-time-day-and-date t)	;曜日・月・日を表示
(setq display-time-24hr-format t)	;24時表示 a
(display-time-mode t)
;; バッテリー表示
(display-battery-mode 0)
;; タイトルバーにファイルのフルパス表示
(setq frame-title-format "%f")
;; 行番号表示
(global-linum-mode 0)
;; リージョン内の行数・文字数をモードラインに表示
;; (defun count-lines-and-chars ()
;;   (if mark-active
;;       (format "%d lines, %d chars "
;; 	      (count-lines (region-beginning) (region-end))
;; 	      (- (region-end) (region-beginning)))
;;     ""))
;; (add-to-list 'default-mode-line-format
;; 	     '(:eval (count-lines-and-chars)))

;; フェイス設定
;; フォント
;; (set-face-attribute 'default nil
;; 					:family "Menlo"
;; 					:height 120)
;; (set-fontset-font
;;  nil 'japanese-jisx0208
;;  (font-spec :family "ヒラギノ明朝 Pro"))
;; カレント行のハイライト
(defface my-hl-line-face
  '((((class color) (background dark))
	 (:background "NavyBlue" t))
	(((class color) (background light))
	 (:background "LightGoldenrodYellow" t))
	(t (:bold t)))
  "hl-line's my face")
(setq hl-line-face 'my-hl-line-face)
(global-hl-line-mode t)
;; 対応する括弧のハイライト
(setq show-paren-delay 0)
(show-paren-mode t)
(setq show-paren-style 'expression)
(set-face-background 'show-paren-match-face nil)
(set-face-underline-p 'show-paren-match-face "yellow")

;; キーバインド
;; 改行と同時にインデントする (C-m)
(define-key global-map (kbd "C-m") 'newline-and-indent)
;; BackSpace (C-h)
(define-key global-map (kbd "C-h") 'delete-backward-char)
;; Jump LineNo (C-x C-g)
(global-set-key "\C-x\C-g" 'goto-line)
;; 行の折り返し表示切り替え (C-c l)
(define-key global-map (kbd "C-c l") 'toggle-truncate-lines)
;; ウィンドウ切り替え (C-t)
;;(define-key global-map (kbd "C-t") 'other-window)


;; バックアップ・オートセーブを~/.emacs.d/backupsへ集める
(add-to-list 'backup-directory-alist
			 (cons "." "~/.emacs.d/backups/"))
(setq auto-save-file-name-transforms
      `((".*" ,(expand-file-name "~/.emacs.d/backups/") t)))

;; ファイルが#!から始まる場合、実行権限を付与して保存
(add-hook 'after-save-hook
		  'executable-make-buffer-file-executable-if-script-p)

;; elisp補助
(defun elisp-mode-hooks ()
  "lisp-mode-hooks"
  (when (require 'eldoc nil t)
    (setq eldoc-idle-delay 0.2)
    (setq eldoc-echo-area-use-multiline-p t)
    (turn-on-eldoc-mode)))
(add-hook 'emacs-lisp-mode-hook 'elisp-mode-hooks)


