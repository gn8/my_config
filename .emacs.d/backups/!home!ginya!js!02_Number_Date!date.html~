<html>
<haed>
<script type="text/javascript" src="/js/common/number.js"></script>
</haed>
<body>

<script type="text/javascript">
<!--
// recipe2.1 数値と文字列を変換する
//var numAsStringValue = '3.14';
//var numAsStringValue = '5.14 test aa 6';
var numAsStringValue = 'aaaa';
// 文字列の場合は最初の数値を取得する
// 数値として取得できない場合はNaNを返す
var intValue = parseInt(numAsStringValue, 10); 　// 10進数で
var floatValue = parseFloat(numAsStringValue);

document.write(intValue + '<br />');
document.write(floatValue + '<br />');


// recipe2.2 数値かどうかを調べる
var someVal = '123';
// 型チェックを行う
if ( typeof someVal == "number") {
    document.write('number type: ' + someVal + '<br />');
} else {
    document.write('not number type: ' + someVal + '<br />');
} 
// 値をチェックする
if (isNaN(someVal)) {
    document.write('not number: ' + someVal + '<br />');
} else {
    document.write('number: ' + someVal + '<br />');
}


// recipe2.3 数値が等しいかどうか調べる
var numA = 45;
var numB = new Number(45);

if (numA == numB) {
    document.write('equal<br />');
} else {
	document.write('not equal<br />');
}
if (numA === numB) {
    document.write('equal<br />');
} else {
	document.write('not equal<br />');
}


// recipe2.4 浮動小数点を四捨五入する
//var floatValue = 3.14;
var floatValue = -3.14;
// 四捨五入
var roundedVal = Math.round(floatValue);
document.write(roundedVal + '<br />');
// 切り下げ。マイナスの場合は-4
var flooredVal = Math.floor(floatValue);
document.write(flooredVal + '<br />');
// 切り上げ。マイナスの場合は-3
var ceiledVal = Math.ceil(floatValue);
document.write(ceiledVal + '<br />');


// recipe2.5 数値を表示用にフォーマットする
var num = 98.654;
// 指定した小数点位置以下を四捨五入
document.write(num.toFixed(2) + '<br />');
document.write(num.toPrecision(5) + '<br />');
// 独自関数
document.write(formatNumber(num, 2) + '<br />');
var num2 = 1000000.11;
document.write(formatCommas("-1111111") + '<br />');
document.write(stripCommas("111,222,333") + '<br />');


// recipe2.6 10進数と16進数で数値を変換する
// 16->10進数
document.write(parseInt('1f', 16) + '<br />');
// 10->16進数
document.write(dec2Hex(255) + '<br />');


// recipe2.7 疑似乱数を生成する
// ０から上限num1の乱数生成
var num1 = 10;
var result = Math.floor(Math.random() * (num1 + 1));
document.write(result + '<br />');

// num1 ～ num2間の乱数生成
var num1 = 1;
var num2 = 7;
var result = Math.floor(Math.random() * (num2 - num1 + 1)) + num1;
document.write(result + '<br />');

// recipe2.8 三角関数を計算する
document.write(Math.sin(5) + '<br />');


// -->
</script>
</body>
</html>